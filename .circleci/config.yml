version: 2.1

orbs: 
  azure-aks: circleci/azure-aks@0.2.1
  kubernetes: circleci/kubernetes@0.4.0

defaults: &defaults
  working_directory: /tmp/workdir

jobs:
  # Based on: https://circleci.com/blog/publishing-to-github-releases-via-circleci/
  publish_github_release:
    <<: *defaults
    docker:
      - image: circleci/golang:1.17-buster
    steps:
      - checkout

      - run:
          name: "Create a new GitHub release"
          command: |
            go install github.com/Devops-2022-Group-R/bump-tool@latest
            GIT_COMMIT_DESC=$(git log --format=oneline -n 1 $CIRCLE_SHA1)
            echo "Creating release the folloing info:"
            echo "  - Commit message: $GIT_COMMIT_DESC"
            echo "  - Owner:          $CIRCLE_PROJECT_USERNAME"
            echo "  - Repository:     $CIRCLE_PROJECT_REPONAME"
            VERSION=$(
              bump-tool \
                --token ${GITHUB_TOKEN} \
                --owner ${CIRCLE_PROJECT_USERNAME} \
                --repo ${CIRCLE_PROJECT_REPONAME} \
                --commitMsg "$GIT_COMMIT_DESC" \
                --shouldLog=false
            )
            mkdir -p workspace
            echo "export VERSION=$VERSION" >> workspace/shared_vars
            echo "Will create release with version $VERSION"
            go install github.com/tcnksm/ghr@latest
            ghr \
              -t ${GITHUB_TOKEN} \
              -u ${CIRCLE_PROJECT_USERNAME} \
              -r ${CIRCLE_PROJECT_REPONAME} \
              -c ${CIRCLE_SHA1} \
              -delete \
              ${VERSION}
      - persist_to_workspace:
          root: workspace
          paths:
              - shared_vars

  push_to_docker_hub:
    <<: *defaults
    docker:
      - image: circleci/golang:1.17-buster
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Import variables from other jobs
          command: cat /tmp/workspace/shared_vars >> $BASH_ENV

      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true

      - run:
          name: Build and push image
          command: |
            VERSION=test.0
            TAG=$VERSION
            IMAGE_PATH=$DOCKER_USERNAME/itu-minitwit-frontend

            echo "Building docker image $IMAGE_PATH:$TAG"
            docker build -t $IMAGE_PATH:$TAG .
            docker tag $IMAGE_PATH:$TAG $IMAGE_PATH:latest

            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push $IMAGE_PATH:$TAG
            docker push $IMAGE_PATH:latest

  # Assumes the cluster is already set up by the backend
  apply_kubernetes:
    <<: *defaults 
    executor: azure-aks/default
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Import variables from other jobs
          command: cat /tmp/workspace/shared_vars >> $BASH_ENV

      - azure-aks/update-kubeconfig-with-credentials:
          cluster-name: itu-minitwit-cluster
          install-kubectl: true
          perform-login: true
          resource-group: itu-minitwit-rg

      - run:
          name: Deploy cluster and set image 
          command: |
            cd .infrastructure/kubernetes
            chmod +x apply.sh
            ./apply.sh
            kubectl set image deployment itu-minitwit-frontend itu-minitwit-frontend=kongborup/itu-minitwit-frontend:$VERSION -n itu-minitwit-frontend-ns

workflows:
  build_and_deploy:
    jobs:
      # - publish_github_release:
      #     context: ITU MiniTwit
       # filters:
          #   branches:
          #     only:
          #       - master

      - push_to_docker_hub:
          # requires:
          #   - publish_github_release
          context: ITU MiniTwit
          # filters:
          #   branches:
          #     only:
          #       - master

      - apply_kubernetes:
          requires:
            - push_to_docker_hub
          context: ITU MiniTwit
          # filters:
          #   branches:
          #     only:
          #       - master
